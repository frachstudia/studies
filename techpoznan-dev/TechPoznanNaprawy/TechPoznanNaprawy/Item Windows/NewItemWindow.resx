<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACVlZUATExMBoCAgBqHh4cshISEMYWFhTOIiIg1ioqKNYmJiTWJiYk1iYmJNYmJ
        iTWJiYk1iYmJNYmJiTWKioo1i4uLNY2MjDWNjIw1jYyMNY+OjjSLiooyhYWFLoaGhiGIiIgLbm5uAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACKioouoKCglKampr+kpKTCpKSkw6SlpMOlpaXDpaWlw6Wl
        pcOlpaXDpaWlw6WlpcOlpaXDpqamw6WlpcOcnqDEj5WZxI6VmMSSl5vElZmcxJuen8OkpaXBpaWlq5WV
        lU92dnYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXFxA5KSkmHAwMDr5ebm/+jo6P/p6en/6erp/+rq
        6v/q6ur/6urq/+rq6v/q6ur/6urq/+vr6//s7Ov/29/h/4+lsP9TeIr/SnKE/1N4if9ggpD/fZij/8DM
        0P/U1NT9nZ2dl3d3dxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxsbEFkpKSb8TExPL09PP/9vb2//f3
        9//5+fn/+vr6//v7+//7+/v/+/v7//r6+v/6+/r/+/v7//z8/P/Q29//U3uO/xtTcf8JRmf/CURk/xVN
        av8qXHT/haKu/9XW2P6bm5ulgICAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH19fQePj49ywsLC8vHy
        8v/09PT/9fX1//b29v/4+Pj/+fn5//r6+v/6+vr/+vr6//r6+v/6+vr//Pv7/83Z3f9Ndor/HFV2/wtJ
        bf8JRmr/F1By/yJWcf9uj57/0NPW/p2dnaaKiooYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfX19CJCQ
        kHTBwcHy7+/v//Ly8v/09PT/9fX1//b29v/4+Pj/+fn5//r6+v/6+vr/+fn6//r6+v/8/Pv/2OHl/1Z9
        j/8aUnP/Ckhr/wlGav8XUHL/I1Vw/3WUo//T1df+nJycpomJiRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB9fX0HkJCQdL+/v/Lu7u7/8fHx//Ly8v/z8/P/9PT0//b29v/39/f/+Pn5//r6+v/6+vr/+vr6//v7
        +//j6ev/YoaW/xhRcP8KR2v/CUZq/xZQcv8jVXD/gJyp/9bX2P6bm5umiYmJGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH5+fgePj490v7+/8uzs7P/v7+//8fHw//Lx8f/z8/P/9PT0//X19v/39/f/+Pj4//n5
        +f/6+vn/+/v6/+rv8P9vkJ//GFBu/wtHa/8KRmr/FlBx/yVXcf+Mp7H/2NnZ/pubm6aJiYkYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfn5+B4+Pj3S+vr7y6+vr/+7u7v/v7+//7+/v//Hx8f/y8vL/8/Pz//X1
        9P/29vb/9/f3//j4+P/6+vr/8PP0/32bp/8aUG3/DUlr/wtGaf8WT3D/J1ly/5ewuv/b3Nz+m5ubpomJ
        iRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+fn4Hj4+PdL29vfLp6en/7Ozs/+3t7f/u7u7/8PDw//Dx
        8f/x8vL/8/Pz//X19f/29vb/9/f3//n4+P/z9PX/iqWw/x1Sbv8PSmz/DUhq/xdQcf8oWnP/mrO8/9vc
        3P6bm5umiYmJGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH5+fgePj490vLy88ujo6P/r6+v/6+zs/+zs
        7P/u7u7/7+7u//Dw8P/x8fH/8/Pz//T09P/19fX/9/f3//T19f+XsLn/H1Rv/xJMbv8QSmv/GlFy/yhZ
        c/+Ysbr/29zc/pubm6aJiYkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfn5+B4+Pj3S8vLzy6Ojo/+np
        6f/q6ur/6+vr/+3s7P/t7e3/7u7u/+/v7//x8fH/8vLy//T09P/19fX/9PT1/6O4wf8iVnD/FE5w/xRM
        bv8cUnL/KVly/5iwuf/b29z+m5ubpomJiRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+fn4Hj4+PdLy8
        vPLo6Oj/6enp/+np6f/q6ur/6+vr/+zs7P/t7e3/7u7u/+/v7//w8PD/8fHy//Pz8//z8/T/rb/H/yZZ
        cv8WUXL/F09x/x9Tcv8rWXL/k6y3/9nZ2v6bm5umiYmJGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH5+
        fgePj490vLy88ujo6P/q6ur/6enp/+np6f/p6en/6urq/+vr6//s7Oz/7e7u/+7v7//w8PD/8fHx//Ly
        8v+3xcz/LF11/xlSdP8aU3T/IlZ0/ytac/+Sq7f/2NjZ/pubm6aJiooYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfn5+B4+Pj3S8vLzy6Ojo/+rq6v/q6ur/6urq/+np6f/p6en/6urq/+vq6v/s7Oz/7e3t/+7u
        7v/w8PD/8fHx/7/M0f8xYXj/G1R1/x1Wdv8kWXf/LFtz/4+ptP/X2Nj+m5ubpoqKihgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB+fn4Hj4+PdLy8vPLo6Oj/6enp/+rq6v/q6ur/6urq/+rq6v/p6en/6enp/+rq
        6v/r6+v/7e3t/+7u7v/w8PD/w8/T/zVkef8cVXX/H1d4/ydbef8tW3T/iqWw/9XW1/6bm5umioqKGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH5+fgePj490vb298unp6f/q6en/6enp/+np6f/q6ur/6urq/+np
        6f/p6en/6enp/+rq6v/r6+v/7Ozs/+/u7v/G0NX/OGZ7/x5Vdf8iWXj/Kl17/y5cdP+Ioq//09XV/pqa
        mqaKiooYAgICAAAAAAD7/v4AAAAAAAAAAAAAAAAAfn5+B4+Pj3S+vr7y6urq/+rq6v/q6ur/6enp/+np
        6f/p6en/6urq/+rq6v/p6en/6enp/+rq6v/r6uv/7ezs/8nT1v87aH3/IFZ1/yVbev8tYH3/Ll11/4ah
        rP/S09T+mpqapo2NjRcAAAAMBwcHNwwMDCkAAAAAAAAAAAAAAAB+fn4Hj4+PdL+/v/Lr6+v/7Ozs/+vr
        6//q6ur/6enp/+np6f/q6ur/6urq/+rq6v/q6ur/6enp/+np6f/r6+v/ytPW/z9rf/8iV3X/KF19/zBi
        gP8vXnb/gp6p/9DR0v6ampqlXFxcIw0NDV0rKyvKJCQkkQAAAAAAAAAAAAAAAH19fQeQkJB0v7+/8uzs
        7P/t7e3/7Ozs/+vr6//q6ur/6urq/+np6f/p6en/6urq/+rq6v/q6ur/6enp/+rq6v/M1Nf/Q22A/yNZ
        d/8sYYD/M2aD/zJgeP9/m6j/zs/Q/pSUlKkmJiZgLy8vyEhISPYkJCSTAAAAAAAAAAAAAAAAfX19B5CQ
        kHTBwcHy7u7u/+/v7//t7e3/7Ozs/+zs7P/r6+v/6urq/+np6f/p6en/6enp/+rq6v/q6ur/6+rq/8/W
        2f9FboH/JFh0/y9hfv82ZoL/NGB2/36Yov/GyMj9bW1txSsrK8NQUFD7QUFB4xEREV0AAAAAAAAAAAAA
        AAB9fX0HkJCQdMHBwfLv7+//7+/v/+7u7v/u7u7/7e3t/+zs7P/r6+v/6+vr/+rq6v/q6ur/6urq/+rq
        6v/r6+v/yc7Q/0FaZf8zT1//RF5t/0dgbv9CVmH/YGlt/3t8fP47OzvvRkZG91FRUf8nJye8BQUFLgAA
        AAAAAAAAAAAAAH19fQeQkJB0wsLC8vDw8P/x8fH/8PDw/+/v7//u7u7/7e3u/+3t7f/s7Oz/4eHh/8fH
        x//AwMD/zc3N/+Li4v+4ubr/Q0VH/1tdXv9oamv/ZWdn/1tdXf9HR0f/Ojo6/0BAQP9SUlL/OTk59hIS
        EoIAAAAQAAAAAAAAAAAAAAAAfH18B5CQkHTCwsLy8fHx//Ly8v/x8fH/8PDw/+/v8P/v7+//7u7u/+rq
        6v+goKD/TU1N/0pKSv9WVlb/gYGB/3Jycv87Ozv/X19f/2VkZP9gYGD/XV1d/1hYWP9SUlL/VFRU/0dH
        R/8iIiLTBgYGQwAAAAMAAAAAAAAAAAAAAAB8fHwHkJCQdMPDw/Ly8vL/8/Pz//Ly8v/y8vL/8fHx//Dw
        8P/w8PD/5OTk/2pqav8pKSn/YGBg/1dXV/89PT3/MzMz/0NDQ/9bW1v/Xl5e/1xcXP9ZWVn/V1dX/1VV
        Vf9OTk7/LS0t7QsLC4IAAAASAAAAAAAAAAAAAAAAAAAAAHx8fAiQkJB0w8PE8vPz8//09PT/9PT0//Pz
        8//y8vL/8fHx//Hx8f/l5eX/Z2dn/yEhIf90dHT/dnZ2/1RUVP9GRkb/R0dH/1dXV/9cXFz/WVlZ/1hY
        WP9WVlb/TExM/zIyMvYTExOjAAAAKwAAAAEAAAAAAAAAAAAAAAAAAAAAhYWFB5CQkHPDw8Py8/Pz//X1
        9f/19fX/9PT0//Pz8//z8/P/8vLy/+zs7P+Hh4f/Kioq/1tbW/9eXl7/TExM/0RERP8+Pj7/Ozs7/0FB
        Qf9FRUX/SEhI/0ZGRv9ERET/Pj4+yCsrKzoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAACfn58Fjo6OccPD
        w/Lz8/P/9fX1//X19f/19fX/9fX1//T09P/z8/P/8vLy/8fHx/9ubm7/V1dX/15eXv+AgID/qKio/6en
        p/9/f3//ampq/2ZmZv9sbGz/hISE/5mZmf6FhYWphYWFGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyM
        jAWQkJBuxMTE8vT09P/19vX/9vb2//b29v/39/f/9vb2//X19f/09PT/8PHw/93d3f/Ly8v/0NDQ/+Li
        4v/u7u7/7e3t/+Tl5f/c3Nz/2dnZ/9ra2v/i4uL/zs7O/peXl6R9fX0XAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVlZWApSUlFq6urrj2NjY/djY2P7Y2Nj+2dnZ/tnZ2f7Z2dn+2NjY/tjY2P7X19f+2NjY/tfX
        1/7X19f+1tbW/tXV1f7V1NT+1NTU/tPT0/7S0tL+0tLS/tLS0v7AwMD3mZmZjXt7exAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIyMgAjo6OIZaWlnSYmJidlpaWoZaWlqKXl5ejl5eXo5eXl6OXl5ejl5eXo5eX
        l6OXl5ejl5eXo5eXl6OXl5ejlpaWo5aWlqOWlpajlpaWo5aWlqOUlJSilpaWoJeXl4iQkJA6m5ubAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIaGhgB2dnYCenp6DIGBgRaLi4sZkZGRGo2NjRyNjY0cjY2NHI2N
        jRyNjY0cjY2NHI2NjRyNjY0cjY2NHI6OjhyOjo4cjo6OHI6OjhyOjo4cjY2NHIqKihuRkZEYioqKEH9/
        fwT///8AAAAAAAAAAAAAAAAA//////gAAB/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAADPgAAAj4AAAB+AAAAfgAAAH4AAAD+AAAA/gA
        AAf4AAAP+AAAD/gAAA/4AAAP/AAAH/////8=
</value>
  </data>
</root>
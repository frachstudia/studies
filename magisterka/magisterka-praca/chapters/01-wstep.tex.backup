\chapter{Wstęp}

W dobie coraz łatwiejszego i szybszego dostępu do sieci globalnej oraz rosnącej liczby urządzeń przetwarzających dane zachodzi coraz pilniejsza potrzeba sprawnej i bezpiecznej wymiany informacji. Twórcy obecnych narzędzi oferują coraz więcej dodatkowych funkcjonalności towarzyszących wymianie danych. Mogą się one różnić w zależności od architektury stworzonego systemu, ze względu na ograniczenia, które architektura ze sobą niesie. Głównym aspektem rozpatrywanym w ramach niniejszej pracy jest wymiana danych w postaci plików różnego typu, udostępnianych wzajemnie pomiędzy użytkownikami systemu.

Jedną z ważnych dodatkowych funkcji systemów umożliwiających wymianę danych jest możliwość komentowania zamieszczanych plików przez użytkowników, którzy udostępniają swoje dane. W przypadku systemów scentralizowanych jest to bardzo często dodawana usługa, ponieważ implementacja oraz utrzymanie takich systemów są zdecydowanie łatwiejsze. W centralnym systemie komunikaty można przechowywać i odczytywać w łatwy sposób w centralnej części systemu. Jednak dane przechowywane w centralnych systemach są mniej bezpieczne i narażone są na brak dostępu w przypadku awarii części centralnej.

Jednak chcąc wymieniać (i przechowywać) dane bezpieczniej, można wybrać rozwiązania o rozproszonej architekturze. Aplikacja \emph{TeamSync} zaimplementowana w ramach niniejszej pracy magisterskiej jest narzędziem, które łączy funkcjonalność synchronizacji danych z możliwością wymiany opinii na ich temat poprzez system komentarzy pogrupowanych w sposób ułatwiający ich umieszczanie oraz czytanie. W swojej ostatecznej postaci umożliwia wygodne wprowadzanie swoich opinii przez użytkowników oraz łatwe i szybkie wyszukiwanie informacji wewnątrz nich.

System \emph{TeamSync} do komunikacji oraz wymiany danych wykorzystuje narzędzie \emph{BitTorrent Sync}. Po uruchomieniu aplikacji \emph{TeamSync} w tle rozpoczyna działanie system \emph{BitTorrent Sync} i obsługuje wymianę danych pomiędzy użytkownikami.

System \emph{TeamSync} pozwala na tworzenie dyskusji dotyczących współdzielonych danych oraz branie udziału w wątkach innych użytkowników poprzez zamieszczanie swoich komentarzy. Poprzez wygodny interfejs graficzny umożliwiona została nawigacja po synchronizowanych katalogach i możliwość wybrania pliku, o którym można rozpocząć dyskusję. Funkcjonalność systemu obejmuje również bardziej zaawansowaną manipulację danymi --- filtrowanie oraz sortowanie wątków i funkcje wyszukiwania wpisywanych fraz wewnątrz komentarzy.

Celem niniejszej pracy magisterskiej jest zaprojektowanie oraz implementacja systemu --- w części klienckiej oraz serwerowej --- umożliwiającego wymianę zarówno danych, jak i komentarzy, opierającego się w części transportu danych na aplikacji \emph{BitTorrent Sync}. Komunikacja z aplikacją \emph{BitTorrent Sync} odbywa się poprzez API stworzone przez producentów systemu, które umożliwia sterowanie systemem \emph{BitTorrent Sync}.

Struktura pracy jest następująca. W rozdziale 2 przedstawiono zestawienie oraz krótki opis kilku istniejących rozwiązań, które swoją funkcjonalnością zbliżone są do aplikacji zaimplementowanej w ramach niniejszej pracy. Wśród nich znajduje się wspomniany powyżej \emph{BitTorrent Sync}. Rozdział 3 zawiera opis modelu systemu --- przyjęte założenia, nałożone ograniczenia oraz podstawowe obiekty i struktury opisywane w pracy --- komentarze, wątki, foldery. Omawiana jest również wewnątrz niego spójność synchronizowanych danych.

Rozdział 4 poświęcony jest architekturze systemu. Opisana zostały ogólna idea działania, protokół komunikacyjny z aplikacją \emph{BitTorrent Sync} oraz dokładne dane, które są przechowywane w plikach komentarzy oraz wątków. W rozdziale 5 omówiono działanie systemu --- jak wyglądają tworzone struktury folderów w systemie plików oraz pliki konfiguracyjne przechowujące dane aplikacji.

Rozdział 6 zawiera opis zastosowanych w projekcie technologii oraz sposób, w jaki część kliencka i serwerowa komunikują się pomiędzy sobą. Dodatkowo w tym rozdziale wyjaśnione zostały przykładowe polecenia wykonywane przez serwer oraz sposób działania użytych technologii. Rozdział 7 stanowi podsumowanie pracy wraz z wnioskami oraz możliwymi kierunkami rozwoju aplikacji.

W dodatku A znajduje się opis graficznego interfejsu użytkownika wraz ze szczegółami dotyczącymi trybu jego pracy oraz wskazówki dotyczące stosowania filtrów wewnątrz aplikacji. W dodatku znajdują się również przykłady użycia wybranych funkcji interfejsu graficznego.